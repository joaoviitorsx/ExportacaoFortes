from typing import Dict, Any
from ....utils.fsFormat import formatarValor, formatarData, tipoOperacao, documentoProprio, modeloDoc, situacaoDoc, tipoFrete

def builderNFM(dados: Dict[str, Any]) -> str:
    campos = [''] * 91

    campos[0] = "NFM"                                               # 1 - Tipo de Registro
    campos[1] = str(dados.get("estabelecimento", ''))               # 2 - Estabelecimento (Da query sugerida)
    campos[2] = tipoOperacao(dados.get("ind_oper"))                 # 3 - Operação
    campos[3] = modeloDoc(dados.get("cod_mod"))                     # 4 - Espécie
    campos[4] = documentoProprio(dados.get("ind_emit"))             # 5 - Documento Próprio
    campos[5] = ""                                                  # 6 - AIDF (Não disponível no SPED C100)
    campos[6] = str(dados.get("ser", ''))[:3]                        # 7 - Série
    campos[7] = ""                                                  # 8 - Subsérie (Não disponível no SPED C100)
    campos[8] = str(dados.get("num_doc", ''))                       # 9 - Número
    campos[9] = ""                                                  # 10 - Formulário Inicial (Não disponível no SPED C100)
    campos[10] = ""                                                 # 11 - Formulário Final (Não disponível no SPED C100)
    campos[11] = formatarData(dados.get("dt_doc"))                  # 12 - Data de Emissão
    campos[12] = situacaoDoc(dados.get("cod_sit"))                  # 13 - Situação do documento
    campos[13] = formatarData(dados.get("dt_e_s"))                  # 14 - Data de Entrada/Saída
    campos[14] = str(dados.get("cod_part", ''))                      # 15 - Remetente/Destinatário
    campos[15] = ""                                                 # 16 - GNRE Vinculada (Não disponível no SPED C100)
    campos[16] = ""                                                 # 17 - GNRE ICMS (Não disponível no SPED C100)
    campos[17] = ""                                                 # 18 - GNRE Mês/Ano (Não disponível no SPED C100)
    campos[18] = ""                                                 # 19 - GNRE Convênio (Não disponível no SPED C100)
    campos[19] = ""                                                 # 20 - GNRE Data de Vencimento (Não disponível no SPED C100)
    campos[20] = ""                                                 # 21 - GNRE Data de Recolhimento (Não disponível no SPED C100)
    campos[21] = ""                                                 # 22 - GNRE Banco (Não disponível no SPED C100)
    campos[22] = ""                                                 # 23 - GNRE Agência (Não disponível no SPED C100)
    campos[23] = ""                                                 # 24 - GNRE Agência DV (Não disponível no SPED C100)
    campos[24] = ""                                                 # 25 - GNRE Autenticado (Não disponível no SPED C100)
    campos[25] = formatarValor(dados.get("vl_merc"))                # 26 - Produtos
    campos[26] = formatarValor(dados.get("vl_frt"))                 # 27 - Frete
    campos[27] = formatarValor(dados.get("vl_seg"))                 # 28 - Seguro
    campos[28] = formatarValor(dados.get("vl_out_da"))              # 29 - Outras Despesas
    campos[29] = ""                                                 # 30 - ICMS Importação (Requer lógica de soma sobre C170 com CFOP '3xxx')
    campos[30] = ""                                                 # 31 - ICMS Importação Diferido (Não disponível)
    campos[31] = formatarValor(dados.get("vl_ipi"))                 # 32 - IPI
    campos[32] = formatarValor(dados.get("vl_icms_st"))             # 33 - Substituição Retido
    campos[33] = ""                                                 # 34 - Serviços ISS (Requer lógica de soma de itens de serviço em C170)
    campos[34] = formatarValor(dados.get("vl_desc"))                # 35 - Desconto Total
    campos[35] = formatarValor(dados.get("vl_doc"))                 # 36 - Valor Total
    campos[36] = str(dados.get("qtd_itens", ''))                    # 37 - Quant. de Itens/Produtos (Da query sugerida)
    campos[37] = 'S' if (dados.get("vl_icms_st") or 0) > 0 and dados.get("ind_oper") == '0' else 'N' # 38 - Substituição Recolher
    campos[38] = "N"                                                # 39 - Antecipado Recolher (Requer regra de negócio, default 'N')
    campos[39] = "N"                                                # 40 - Diferencial de Alíquotas (Requer regra de negócio, default 'N')
    campos[40] = formatarValor(dados.get("vl_icms_st"))             # 41 - Vr. Contáb. Subst. Tributária
    campos[41] = formatarValor(dados.get("vl_bc_icms_st"))          # 42 - Base Cálc. Subst. Tributária
    campos[42] = ""                                                 # 43 - Vr. Contábil Antecipado (Não disponível)
    campos[43] = ""                                                 # 44 - ISS Retido (Não aplicável)
    campos[44] = ""                                                 # 45 - Data de Retenção do ISS (Não aplicável)
    campos[45] = ""                                                 # 46 - Serviço (Não aplicável)
    campos[46] = ""                                                 # 47 - Data de Entrada no Estado (Não disponível)
    campos[47] = tipoFrete(dados.get("ind_frt"))                    # 48 - Frete por Conta
    campos[48] = "N"                                                # 49 - Fatura (Default 'N' - Não Informado)
    campos[49] = ""                                                 # 50 - Número do EEC (Não aplicável)
    campos[50] = ""                                                 # 51 - Número do Cupom (Não aplicável)
    campos[51] = ""                                                 # 52 - Receita Tributável COFINS (Não disponível no C100)
    campos[52] = ""                                                 # 53 - Receita Tributável PIS (Não disponível no C100)
    campos[53] = ""                                                 # 54 - Receita Tributável CSL 1 (Não disponível no C100)
    campos[54] = ""                                                 # 55 - Receita Tributável CSL 2 (Não disponível no C100)
    campos[55] = ""                                                 # 56 - Receita Tributável IRPJ 1 (Não disponível no C100)
    campos[56] = ""                                                 # 57 - Receita Tributável IRPJ 2 (Não disponível no C100)
    campos[57] = ""                                                 # 58 - Receita Tributável IRPJ 3 (Não disponível no C100)
    campos[58] = ""                                                 # 59 - Receita Tributável IRPJ 4 (Não disponível no C100)
    campos[59] = ""                                                 # 60 - COFINS Retido na Fonte (Não disponível no C100)
    campos[60] = ""                                                 # 61 - PIS Retido na Fonte (Não disponível no C100)
    campos[61] = ""                                                 # 62 - CSL Retido na Fonte (Não disponível no C100)
    campos[62] = ""                                                 # 63 - IRPJ Retido na Fonte (Não disponível no C100)
    campos[63] = "N"                                                # 64 - Gera Transferência (Requer regra de negócio, default 'N')
    campos[64] = ""                                                 # 65 - Observação (Pode ser populado via C195/C110)
    campos[65] = ""                                                 # 66 - Alíquota da Substituição Tributária (Requer lógica)
    campos[66] = str(dados.get("chv_nfe", ''))                       # 67 - Chave Eletrônica
    campos[67] = ""                                                 # 68 - INSS Retido na Fonte (Não disponível)
    campos[68] = ""                                                 # 69 - Base de Cálculo do COFINS/PIS não cumulativos (Requer lógica sobre C170)
    campos[69] = ""                                                 # 70 - Motivo do Cancelamento (Não disponível no SPED)
    campos[70] = ""                                                 # 71 - Natureza da Operação (Requer mapeamento de CFOP)
    campos[71] = ""                                                 # 72 - Código da Informação Complementar (Dado externo)
    campos[72] = ""                                                 # 73 - Complemento da Informação Complementar (Dado externo)
    campos[73] = ""                                                 # 74 - Hora da Saída (Não disponível no C100)
    campos[74] = ""                                                 # 75 - UF de Embarque (Não disponível no C100)
    campos[75] = ""                                                 # 76 - Local de Embarque (Não disponível no C100)
    campos[76] = ""                                                 # 77 - Código Contábil (Requer busca no C170.cod_cta)
    campos[77] = ""                                                 # 78 - Chave NFE de Referência (Disponível no C113)
    campos[78] = ""                                                 # 79 - Informação Adicional do Fisco (Não disponível no C100)
    campos[79] = "N"                                                # 80 - Indicador de Operação com Consumidor Final (Default 'N')
    campos[80] = ""                                                 # 81 - Indicador de Presença do Comprador (Não disponível no C100)
    campos[81] = ""                                                 # 82 - Data da Contingência (Não disponível no C100)
    campos[82] = ""                                                 # 83 - Hora da Contingência (Não disponível no C100)
    campos[83] = ""                                                 # 84 - Reconhece NFe (Específico de AM)
    campos[84] = ""                                                 # 85 - NFe informada pelo contribuinte (Específico de AM)
    campos[85] = ""                                                 # 86 - Total do ICMS Desoneração (Requer soma do C170.vl_icms_deson)
    campos[86] = ""                                                 # 87 - Prestador de Serviços em Obra de Construção Civil (Não aplicável)
    campos[87] = ""                                                 # 88 - CNO (Não aplicável)
    campos[88] = ""                                                 # 89 - Data de Escrituração (Para docs extemporâneos)
    campos[89] = ""                                                 # 90 - Total do FCP Substituição (Requer soma do C170.vl_fcp_st)
    campos[90] = "N"                                                # 91 - NF-e Saída de Terceiros (Requer regra de negócio, default 'N')

    return "|".join(campos)